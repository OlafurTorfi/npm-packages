#!/usr/bin/env bash
# echo >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
# echo $@ >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
export p0=1
export p1=2
export p2=3
if [ "$1" = "--namespace" ]; then
	export p0=3
	export p1=4
	export p2=5
fi
export KUBEOP=${!p0}
export KUBEPARAM1=${!p1}
export KUBEPARAM2=${!p2}

if [ -z "${KUBECTL_OUTPUT_FOLDER}" ]; then
	KUBECTL_OUTPUT_FOLDER="./.testrun"
fi


if [ "${KUBEOP}" = "rollout" ]; then
	echo "rollout ${KUBEPARAM1} ${KUBEPARAM2} FAKED ok"
	exit 0
fi

if [ "${KUBEOP}" = "annotate" ]; then
	echo "annotate ${KUBEPARAM1} ${KUBEPARAM2} FAKED ok"
	exit 0
fi

if [ "${KUBEOP}" = "delete" ]; then
	if [ "${KUBEPARAM1}" = "-f" ] && [ "${KUBEPARAM2}" = "-" ];
	then
		input=$(cat)
		if [ "${input}" = "" ]; then
			echo ERROR IN kubectl delete -f -  empty input!!!!
			exit 255
		fi
#		echo -n "-------------- delete stdin ----------------------->>>>" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#		echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#		echo "<<<<-------------- delete stdin -----------------------" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
		filename=$(echo "${input}" | testbin/deploymentdocument-classifier.js)
		if [ -e "${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml" ]; then
			echo "ERROR: ${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml already deployed. Probably means that deployment descriptor exists both in folders and is being extracted from image metadata"
			exit 255
		fi

    if [ ! -d "${KUBECTL_OUTPUT_FOLDER}" ]; then
      mkdir -p "${KUBECTL_OUTPUT_FOLDER}"
    fi
		echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml
		echo "fake kubectl ${KUBEOP} ${filename}.yaml DONE"

		exit 0
	fi
fi
if [ "${KUBEOP}" = "create" ]; then
	echo "kubectl create requires no other input"
	exit 0
fi
if [ -d "${KUBEPARAM2}" ]; then
	find ${KUBEPARAM2} -name "*.yml" -or -name "*.yaml"  | xargs -n 1 -I {} bash -c 'kubectl ${KUBEOP} -f "$@"' _ {}
elif [ -e "${KUBEPARAM2}" ]; then
#	echo -n "-------------   ${KUBEPARAM2} contents -------------->>>>"  >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#	cat ${KUBEPARAM2} >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#    echo "<<<<-------------   ${KUBEPARAM2} contents --------------"  >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt

	filename=$(cat ${KUBEPARAM2} | testbin/deploymentdocument-classifier.js)

	if [ -e "${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml" ]; then
		echo "ERROR: ${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml already exists. Probably means that deployment descriptor exists both in aws-environment and is being extracted from image metadata"
		exit 255
	fi

	cat ${SUBJECT} >> ${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml
	echo "fake kubectl ${KUBEOP} ${filename}.yaml DONE"

elif [[ "${KUBEOP}" = "apply" && "${KUBEPARAM1}" = "-f"  &&  "${KUBEPARAM2}" = "-" ]]; then
	echo "apply -f - specified, reading stdin"
	input=$(cat)

	filename=$(echo "${input}" | testbin/deploymentdocument-classifier.js)

	if [ -e "${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml" ]; then
		echo "ERROR: ${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml already exists. Probably means that deployment descriptor exists both in aws-environment and is being extracted from image metadata"
		exit 255
	fi

	echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/${KUBEOP}-${filename}.yaml

	if [ "${input}" = "" ]; then
		echo ERROR IN KUBECTL.... empty input!!!!
		exit 255
	fi
	echo "fake kubectl ${KUBEOP} ${filename}.yaml DONE"


#   Fake deployment failure...uncomment lines below.
#	if [ $(echo ${input} | grep deployment | wc -l) = "1" ]; then
#		exit -1
#	fi

#	echo -n "-------------- stdin ----------------------->>>>" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#	echo -n "${input}" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
#    echo "<<<<-------------- stdin -----------------------" >> ${KUBECTL_OUTPUT_FOLDER}/kubectl.txt
else
	echo "Do not know how to fake kubectl ${KUBEOP} ${KUBEPARAM1} ${KUBEPARAM2}  (full params: ${@}) "
	exit -1
fi
